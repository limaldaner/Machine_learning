###########################################################################
#                        Train and Test SVM Code 
# SVM linear kernel
#
# Canada
# August 2019
#
# Oriented by: Dr. M. Shahbazi
# Author: Li√©ge Maldaner
# E-mail: liege.malda@gmail.com
#
# Results:
###########################################################################

# Importing modules
import pandas as pd
import os
from sklearn import datasets
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis

#READING DATA
X = pd.read_csv('/home/liege/PycharmProjects/SVM/X.csv')
y = pd.read_csv('/home/liege/PycharmProjects/SVM/y.csv')

#REDUCE DATA
# Create an LDA that will reduce the data down to 4 feature
lda = LinearDiscriminantAnalysis(n_components=1)

# run an LDA and use it to transform the features
X_lda = lda.fit(X, y).transform(X)

# TRAINING DATA
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.10)

from sklearn.svm import SVC
c = 2 #2.05
G = 1 #2.05
svclassifier = SVC(kernel='linear', random_state=0, gamma=G, C=c)
svclassifier.fit(X_train, y_train)

# making predictions
y_pred = svclassifier.predict(X_test)
#print(y_pred)

from sklearn.metrics import classification_report, confusion_matrix
print('penalty constant: ',c)
print('Gamma: ',G)
#print('X_pca')
#print('linear')
print(confusion_matrix(y_test,y_pred))
print(classification_report(y_test,y_pred))
